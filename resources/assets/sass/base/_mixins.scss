@charset "UTF-8";

@mixin list-reset {
  list-style: none;
  margin: 0;
  padding: 0;
}


@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

@mixin justify-align {  
  text-align: justify;
  &::after {
    content: " ";
    display: inline-block;
    width: 100%;
    height: 0;
  }
}

%before {
  content: " ";
  position: absolute;
  display: block;
}

%hide {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

// Background с фолбеками на пнг и для ретины
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}

%debug {
  @include debug(rgba(0, 0, 0, .3), 1px solid #ff0);
}

///////////////////////////////////ФУНКЦИИ///////////////////////////
// Перевод в rem

@function rem($size) {
  @return #{$size / $font-size-base}rem;
}

//Кроссбраузерная прозрачность

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

// Font-face
@function main-src($formats, $file-path, $font-family) {
  $result: ();
  @if index($formats, eot) {
    $eot-val: url('#{$file-path}.eot?#iefix') format('embedded-opentype');
    $result: append($result, $eot-val, comma);
  }
  @if index($formats, woff2) {
    $woff2-val: url('#{$file-path}.woff2') format('woff2');
    $result: append($result, $woff2-val, comma);
  }
  @if index($formats, woff) {
    $woff-val: url('#{$file-path}.woff') format('woff');
    $result: append($result, $woff-val, comma);
  }
  @if index($formats, ttf) {
    $ttf-val: url('#{$file-path}.ttf') format('truetype');
    $result: append($result, $ttf-val, comma);
  }
  @if index($formats, svg) {
    $svg-val: url('#{$file-path}.svg##{$font-family}') format('svg');
    $result: append($result, $svg-val, comma);
  }
  @return $result;
}

@mixin font-face (
  $font-family,
  $file-path,
  $weight: normal,
  $style: normal,
  $formats: eot woff2 woff ttf svg
) {

  @if index('italic' 'oblique', $weight) {
    $style: $weight;
    $weight: normal;
  }

  @font-face {
    font-family: $font-family;
    font-weight: $weight;
    font-style: $style;

    @if index($formats, eot) {
      src: url('#{$file-path}.eot');
    }
    src: main-src($formats, $file-path, $font-family);
  }

}

//Треугольники
@mixin triangle($size, $color, $direction) {
  $width: nth($size, 1);
  $height: nth($size, length($size));
  $foreground-color: nth($color, 1);
  $background-color: if(length($color)==2, nth($color, 2), transparent);
  height: 0;
  width: 0;

  @if ($direction==up) or ($direction==down) or ($direction==right) or ($direction==left) {
    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction==up {
      border-bottom: $height solid $foreground-color;
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
    }
    @else if $direction==right {
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
    @else if $direction==down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;
    }
    @else if $direction==left {
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
      border-top: $width solid $background-color;
    }
  }
  @else if ($direction==up-right) or ($direction==up-left) {
    border-top: $height solid $foreground-color;

    @if $direction==up-right {
      border-left: $width solid $background-color;
    }
    @else if $direction==up-left {
      border-right: $width solid $background-color;
    }
  }
  @else if ($direction==down-right) or ($direction==down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction==down-right {
      border-left: $width solid $background-color;
    }
    @else if $direction==down-left {
      border-right: $width solid $background-color;
    }
  }
  @else if ($direction==inset-up) {
    border-color: $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $height $width;
  }
  @else if ($direction==inset-down) {
    border-color: $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $height $width;
  }
  @else if ($direction==inset-right) {
    border-color: $background-color $background-color $background-color $foreground-color;
    border-style: solid;
    border-width: $width $height;
  }
  @else if ($direction==inset-left) {
    border-color: $background-color $foreground-color $background-color $background-color;
    border-style: solid;
    border-width: $width $height;
  }
}
